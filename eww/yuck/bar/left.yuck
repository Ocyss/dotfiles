; (deflisten workspace "scripts/workspaces")
(defpoll weather_label :interval "8m"  "scripts/weather.py module")
(defpoll electricity_label :interval "15m"  "scripts/electricity.py module")
(deflisten workspaces :initial "[]" "bash ~/.config/eww/scripts/workspaces")

(defwidget powermenu_botton []
  (eventbox :cursor "pointer"
    (box :class "powermenu_botton" :vexpand: false :hexpand: false
      ;(button :onclick "eww open-many --toggle powermenu" "")
      ;(button :onclick "alacritty" "")
      (button
        :onclick "eww open --toggle powermenu"
        :onmiddleclick "bash ~/.config/scripts/OpenApps --terminal"
        :onrightclick "bash ~/.config/scripts/OpenApps --menu"
        ""
      )
    )
  )
)

; bspwm
; (defwidget workspaces []
  ;   (literal :content workspace)
; )

(defwidget workspaces []
  (eventbox :onscroll "bash ~/.config/eww/scripts/workspaces-change {}" :class "workspaces-widget"
    (box :space-evenly true :class "works"
      (for workspace in workspaces
        (button
          :onclick "hyprctl dispatch workspace ${workspace.id}"
          :class `workspace ${workspace.state == 2 ? "on" : workspace.state == 1 ? "off" : ""}`
        `${workspace.state == 2 ? "󰮯" : workspace.state == 1 ? "󰊠" : "󰑊"}`)
      )
    )
  )
)

(defwidget systrays []
  (systray
    :class "systray"
    :packdirection "right"
  )
)

(defwidget weather []
  (eventbox :cursor "pointer"
    :onclick "scripts/weather.py click"
    (box
      :class "info"
      :space-evenly false
      (label
        :class "icon weather"
        :style "color: ${weather_label.iconColor}"
      :text "${weather_label.icon}")
      (label
        :class "msg"
        :style "color: ${weather_label.msgColor}"
        :text "${weather_label.msg}"
      )
    )
  )
)

(defwidget electricity []
  (eventbox :cursor "pointer"
    :onclick "scripts/electricity.py click"
    (box
      :class "info electricity"
      :space-evenly false
      (label
        :class "icon"
        :style "color: ${electricity_label.iconColor}"
      :text "${electricity_label.icon}")
      (label
        :class "msg"
        :style "color: ${electricity_label.msgColor}"
        :text "${electricity_label.msg}"
      )
    )
  )
)
